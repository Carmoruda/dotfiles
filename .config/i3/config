#==========================================================
#
#
#   ██╗██████╗ ██╗    ██╗███╗   ███╗
#   ██║╚════██╗██║    ██║████╗ ████║
#   ██║ █████╔╝██║ █╗ ██║██╔████╔██║
#   ██║ ╚═══██╗██║███╗██║██║╚██╔╝██║
#   ██║██████╔╝╚███╔███╔╝██║ ╚═╝ ██║
#
#
#   To learn more about how to configure i3
#   go to https://i3wm.org/docs/userguide.html
#
#==========================================================

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Source Code Pro 10

##########################################
### [ Running apps in the background ] ###
##########################################

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# Start nitrogen (simple GUI with multi-monitor support). See also
# https://github.com/l3ib/nitrogen
exec --no-startup-id nitrogen --restore

# Start polybar (a fast and easy-to-use tool for creating status bars). See also
# https://github.com/polybar/polybar
exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# Start picom (a compositor for X). See also
# https://github.com/yshui/picom
exec_always --no-startup-id picom -b

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use amixer to adjust volume (I had problems with max volume and the commands for PulseAudio)
bindsym XF86AudioRaiseVolume exec amixer -D pulse sset Master 5%+ && pkill -RTMIN+1 i3blocks
bindsym XF86AudioLowerVolume exec amixer -D pulse sset Master 5%- && pkill -RTMIN+1 i3blocks

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
##bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
##bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

#####################
### [ Shortcuts ] ###
#####################

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal. See also
# https://github.com/kovidgoyal/kitty
bindsym $mod+Return exec kitty

# start vscode. See also
# https://code.visualstudio.com/
bindsym F11 exec code

# start firefox. See also
# https://www.mozilla.org/en-US/firefox/new/
bindsym $mod+w exec firefox
bindsym F10 exec firefox

# start file manager. See also
# https://gitlab.xfce.org/xfce/thunar
bindsym $mod+n exec thunar

# lock screen with i3lock. See also
# https://github.com/i3/i3lock
bindsym $mod+Ctrl+l exec --no-startup-id ~/.config/scripts/power_menu lock

# open i3 config file
bindsym F9 exec kitty code ~/.config/i3/config

# toggle wifi
bindsym F8 exec ~/.config/scripts/toggle_wifi

# power management (i3lock is required)
set $mode_system_management System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system_management" {
        # These bindings trigger as soon as you enter the system management mode

        # Pressing l will lock the system.
        # Pressing e will logout the user from the system.
        # Pressing s will suspend the system.
        # Pressing h will hibernate the system.
        # Pressing r will reboot the system.
        # Pressing Shift+s will shutdown the system.
        bindsym l exec --no-startup-id ~/.config/scripts/power_menu lock, mode "default"
        bindsym e exec --no-startup-id ~/.config/scripts/power_menu logout, mode "default"
        bindsym s exec --no-startup-id ~/.config/scripts/power_menu suspend, mode "default"
        bindsym h exec --no-startup-id ~/.config/scripts/power_menu hibernate, mode "default"
        bindsym r exec --no-startup-id ~/.config/scripts/power_menu reboot, mode "default"
        bindsym Shift+s exec --no-startup-id ~/.config/scripts/power_menu shutdown, mode "default"

        # back to normal: Enter or Escape or $mod+Pause
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+Pause mode "default"
}

bindsym $mod+Pause mode "$mode_system_management"

# kill focused window
bindsym $mod+Shift+q kill

# start rofi (Window switcher, run dialog, ssh-launcher and dmenu replacement)
bindsym $mod+d exec ~/.config/rofi/launchers/launcher.sh
##bindcode $mod+40 exec "rofi -modi drun,run -show drun"

# rofi applets(rofi is required)
set $mode_rofi_applets Applets (a) apps, (b) backlight, (m) music, (n) network, (p) powermenu, (q) quicklinks, (s) screenshot
mode "$mode_rofi_applets" {
        # These bindings trigger as soon as you enter the system management mode

        # Pressing a will show the shortcuts for most used apps.
        # Pressing b will display and allow screen brightness adjustment.
        # Pressing Shift+b will diplay battery percentage & charging-discharging status.
        # Pressing m will allow to control the song play throught dunst.
        # Pressing n will display online-offline status.
        # Pressing p will display a classic powermenu.
        # Pressing q will show a list of bookmarks schortcuts for most used sites.
        # Pressing s will take a screenshot using scrot.
        # Pressing t will display the current time, day & date.
        # Pressing v will display and allow volume adjustment.
        bindsym a exec --no-startup-id ~/.config/scripts/applets_menu apps, mode "default"
        bindsym b exec --no-startup-id ~/.config/scripts/applets_menu backlight, mode "default"
        ##bindsym Shift+b exec --no-startup-id ~/.config/scripts/applets_menu battery, mode "default"
        bindsym m exec --no-startup-id ~/.config/scripts/applets_menu music, mode "default"
        bindsym n exec --no-startup-id ~/.config/scripts/applets_menu network, mode "default"
        bindsym p exec --no-startup-id ~/.config/scripts/applets_menu powermenu, mode "default"
        bindsym q exec --no-startup-id ~/.config/scripts/applets_menu quicklinks, mode "default"
        bindsym s exec --no-startup-id ~/.config/scripts/applets_menu screenshot, mode "default"
        ##bindsym t exec --no-startup-id ~/.config/scripts/applets_menu time_date, mode "default"
        ##bindsym v exec --no-startup-id ~/.config/scripts/applets_menu volume, mode "default"

        # back to normal: Enter or Escape or $mod+Pause
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+Fn+a mode "default"
}

bindsym $mod+Shift+a mode "$mode_rofi_applets"

# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
##bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+ntilde focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+ntilde move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# move workspaces between monitors
bindsym $mod+p move workspace to output left

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# screenshots (maim and xclip are required)
bindsym Print exec --no-startup-id maim "/home/$USER/Pictures/$(date)"
bindsym $mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) "/home/$USER/Pictures/$(date)"
bindsym Shift+Print exec --no-startup-id maim --select "/home/$USER/Pictures/$(date)"

# clipboard screenshots (maim and xclip are required)
bindsym Ctrl+Print exec --no-startup-id maim | xclip -selection clipboard -t image/png
bindsym Ctrl+$mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) | xclip -selection clipboard -t image/png
bindsym Ctrl+Shift+Print exec --no-startup-id maim --select | xclip -selection clipboard -t image/png

# brightness control (brightnessctl is required)
exec_always --no-startup-id light -I
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set +10%
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set 10%-
##bindsym XF86MonBrightnessUp exec light -A 2 && light -O# increase screen brightness && brightness &
##bindsym XF86MonBrightnessDown exec light -U 2 && light -O# decrease screen brightness && brightness &

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# switch between the current and previosly focused workspace
bindsym $mod+Tab workspace back_and_forth

# moving workspaces between different screens
set $mode_move_workspace Move to output (l) left, (r) right, (u) up, (d) down
mode "$mode_move_workspace" {
        # These bindings trigger as soon as you enter the move workspace mode

        # Pressing l move the workspace to the output on the left
        # Pressing r move the workspace to the output on the right.
        # Pressing u move the workspace to the output above.
        # Pressing d move the workspace to the output below.
        bindsym l move workspace to output left
        bindsym d move workspace to output down
        bindsym u move workspace to output up
        bindsym r move workspace to output right

        # same bindings, but for the arrow keys
        bindsym Left move workspace to output left
        bindsym Down move workspace to output down
        bindsym Up move workspace to output up
        bindsym Right move workspace to output right

        # back to normal: Enter or Escape or $mod+x
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+x mode "default"
}

bindsym $mod+x mode "$mode_move_workspace"

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
set $mode_resize Resize (j) -width, (ñ) +width, (l) -height, (ñ) +height
mode "$mode_resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym ntilde resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "$mode_resize"

##################
### [ i3 Bar ] ###
##################

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available). See also: https://i3wm.org/docs/userguide.html#_configuring_i3bar
##bar {
##        status_command i3status
##}

###################
### [ Borders ] ###
###################

# window title alignment
## title_align center

# show window icons either for specific windows or for all windows
 ## for_window [all] title_window_icon on

# default border style for new windows
default_border pixel 2

# hiding borders adjacent to the screen edges
##hide_edge_borders smart

# draw borders only if there is more than one window in a workspace
##smart_borders on

# border colors
#                       BORDER   BACKGROUND  TEXT     INDICATOR  CHILD_BORDER
client.focused          #343746  #343746     #F8F8F2  #343746    #343746
client.focused_inactive #343746  #343746     #F8F8F2  #21222C    #21222C
client.unfocused        #343746  #343746     #F8F8F2  #21222C    #21222C
client.urgent           #2f343a  #900000     #ffffff  #900000    #900000

##################################
### [ Windows and workspaces ] ###
##################################

# back-and-forth when switching to the current workspace
workspace_auto_back_and_forth yes

# focus follows mouse
focus_follows_mouse yes

# control when the mouse cursor should be warped
mouse_warping output

# popups during fullscreen mode
popup_during_fullscreen smart

# focus on window activation
focus_on_window_activation smart

################
### [ Gaps ] ###
################

# gaps between two adjacent containers (or a container and an edge)
gaps inner 4

# additional spacing along the screen edges (added to inner gaps)
gaps outer 0

# Specify outer gaps on specific sides
gaps left 9
gaps top 4
gaps bottom 2
gaps right 2

# enable gaps when there is more than one container on the workspace
## smart_gaps on
